// 会员模块

// 符号列表
var SYMBOL_STR = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

// 管理员账号
var ADMIN_ACCOUNT = [];

// 增加管理员会员
ADMIN_ACCOUNT.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 3]));
ADMIN_ACCOUNT.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 4]));
ADMIN_ACCOUNT.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 5]));
ADMIN_ACCOUNT.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 6]));

// 会员账号
var MEMBERS_ACCOUNTS = [];
// 会员名称
var MEMBERS_NAMES = ["清澈"];

// 高级会员账号
var SUPER_ACCOUNTS = [];

// 高级会员名称
var SUPER_NAMES= [];

// 增加会员账号
MEMBERS_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 3]));
MEMBERS_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 4]));
MEMBERS_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 5]));
MEMBERS_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 6]));

// 购买的会员 946932819
MEMBERS_ACCOUNTS.push(getMember([9, 4, 6, 9, 3, 2, 8, 1, 9]));
// 购买的会员 hcn123456
MEMBERS_ACCOUNTS.push(getMember([17, 12, 23, 1, 2, 3, 4, 5, 6]));
// 购买的会员 s9527
MEMBERS_ACCOUNTS.push(getMember([28, 9, 5, 2, 7]));
// 购买的会员 tyghvb1(已赠送高级)
MEMBERS_ACCOUNTS.push(getMember([29, 34, 16, 17, 31, 11, 1]));
// 升级高级会员 tyghvb1
SUPER_ACCOUNTS.push(getMember([29, 34, 16, 17, 31, 11, 1]));

// 购买的会员 qq1111
MEMBERS_ACCOUNTS.push(getMember([26, 26, 1, 1, 1, 1]));
// 购买的会员 sa
MEMBERS_ACCOUNTS.push(getMember([28, 10]));
// 购买的会员 778914380
MEMBERS_ACCOUNTS.push(getMember([7, 7, 8, 9, 1, 4, 3, 8, 0]));
// 购买的会员 13407734428
MEMBERS_ACCOUNTS.push(getMember([1, 3, 4, 0, 7, 7, 3, 4, 4, 2, 8]));
// 购买的会员 mjtm
MEMBERS_ACCOUNTS.push(getMember([22, 19, 29, 22]));
// 购买的会员 wang0315
MEMBERS_ACCOUNTS.push(getMember([32, 10, 23, 16, 0, 3, 1, 5]));
// 购买的会员 a1817309
MEMBERS_ACCOUNTS.push(getMember([10, 1, 8, 1, 7, 3, 0, 9]));

// 购买的会员 158661436500(已赠送高级会员)
MEMBERS_ACCOUNTS.push(getMember([1, 5, 8, 6, 6, 1, 4, 3, 6, 5, 0, 0]));
// 购买的会员 158661436501(已赠送高级会员)
MEMBERS_ACCOUNTS.push(getMember([1, 5, 8, 6, 6, 1, 4, 3, 6, 5, 0, 1]));
// 购买的会员 158661436502(已赠送高级会员)
MEMBERS_ACCOUNTS.push(getMember([1, 5, 8, 6, 6, 1, 4, 3, 6, 5, 0, 2]));
// 升级高级会员 158661436500
SUPER_ACCOUNTS.push(getMember([1, 5, 8, 6, 6, 1, 4, 3, 6, 5, 0, 0]));

// 阿兵
// 购买的会员 w908(50标准)
MEMBERS_ACCOUNTS.push(getMember([32, 9, 0, 8]));
// 购买的会员 w909(已赠送高级会员)
MEMBERS_ACCOUNTS.push(getMember([32, 9, 0, 9]));
// 购买的会员 c1817309(已赠送高级会员)
MEMBERS_ACCOUNTS.push(getMember([12, 1, 8, 1, 7, 3, 0, 9]));
// 购买的会员 b1817309(已赠送高级会员)
MEMBERS_ACCOUNTS.push(getMember([11, 1, 8, 1, 7, 3, 0, 9]));
// 购买的角色
MEMBERS_NAMES.push("逍遥狂魔");
// 升级高级会员w909
SUPER_ACCOUNTS.push(getMember([32, 9, 0, 9]));
// 升级高级会员b1817309
SUPER_ACCOUNTS.push(getMember([11, 1, 8, 1, 7, 3, 0, 9]));

// 购买会员 秦时明月
// 购买的会员 lv01
MEMBERS_ACCOUNTS.push(getMember([21, 31, 0, 1]));
// 购买的会员 lv03
MEMBERS_ACCOUNTS.push(getMember([21, 31, 0, 3]));
// 购买的会员 268800
MEMBERS_ACCOUNTS.push(getMember([2, 6, 8, 8, 0, 0]));
// 购买的会员 268811
MEMBERS_ACCOUNTS.push(getMember([2, 6, 8, 8, 1, 1]));
// 购买的会员 268822
MEMBERS_ACCOUNTS.push(getMember([2, 6, 8, 8, 2, 2]));

// 购买会员 文子
// 购买的会员 fang2025
MEMBERS_ACCOUNTS.push(getMember([15, 10, 23, 16, 2, 0, 2, 5]));
// 购买的会员 hai2025
MEMBERS_ACCOUNTS.push(getMember([17, 10, 18, 2, 0, 2, 5]));
// 赠送角色
MEMBERS_NAMES.push("装备回收官");

// 购买的会员 12282292
MEMBERS_ACCOUNTS.push(getMember([1, 2, 2, 8, 2, 2, 9, 2]));

// 赠送角色
MEMBERS_NAMES.push("帝厅长");
MEMBERS_NAMES.push("帝言");

// 文子
// 购买的会员 linlifeng 50标准
MEMBERS_ACCOUNTS.push(getMember([21, 18, 23, 21, 18, 15, 14, 23, 16]));
// 购买的会员 linlifengb 50标准
MEMBERS_ACCOUNTS.push(getMember([21, 18, 23, 21, 18, 15, 14, 23, 16, 11]));
// 购买的会员 linlifenga 50标准
MEMBERS_ACCOUNTS.push(getMember([21, 18, 23, 21, 18, 15, 14, 23, 16, 10]));
// 购买的会员 agm123 50标准
MEMBERS_ACCOUNTS.push(getMember([10, 16, 22, 1, 2, 3]));
// 赠送角色
MEMBERS_NAMES.push("奶气侧漏");

// 购买角色
MEMBERS_NAMES.push("玫红色舞");

// 星星
// 购买角色
MEMBERS_NAMES.push("白马王子");
// 购买角色
MEMBERS_NAMES.push("关小月");
// 赠送角色
MEMBERS_NAMES.push("弑情忠義_帝");

// 购买得角色 混沌起源 已赠送
MEMBERS_NAMES.push("混沌起源");
// 购买的角色 夕阳红 已赠送
MEMBERS_NAMES.push("夕阳红");
// 赠送角色 VIP孙权
MEMBERS_NAMES.push("VIP孙权");

// 汕头肠粉
// 购买角色 喜欢刺(已赠送角色)
MEMBERS_NAMES.push("喜欢刺");
// 购买角色 江山(已赠送角色)
MEMBERS_NAMES.push("江山");
// 赠送角色 肠粉2
MEMBERS_NAMES.push("肠粉2");

// 增加高级会员
SUPER_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 3]));
SUPER_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 4]));
SUPER_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 5]));
SUPER_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 6]));
SUPER_ACCOUNTS.push(getMember([26, 26, 1, 1, 1, 1]));

// 测试用高级会员 s9527
SUPER_ACCOUNTS.push(getMember([28, 9, 5, 2, 7]));

// 赠送高级会员 linlifengb
SUPER_ACCOUNTS.push(getMember([21, 18, 23, 21, 18, 15, 14, 23, 16, 11]));
// 赠送高级会员 268800
SUPER_ACCOUNTS.push(getMember([2, 6, 8, 8, 0, 0]));
// 赠送高级会员 268811
SUPER_ACCOUNTS.push(getMember([2, 6, 8, 8, 1, 1]));
// 赠送高级会员 lv01
SUPER_ACCOUNTS.push(getMember([21, 31, 0, 1]));

// 购买高级会员 医打怪兽
// taigong6
SUPER_ACCOUNTS.push(getMember([29, 10, 18, 16, 24, 23, 16, 6]));
// 32722
SUPER_ACCOUNTS.push(getMember([3, 2, 7, 2, 2]));
// jun42
SUPER_ACCOUNTS.push(getMember([19, 30, 23, 4, 2]));
// p118
SUPER_ACCOUNTS.push(getMember([25, 1, 1, 8]));
// shi5
SUPER_ACCOUNTS.push(getMember([28, 17, 18, 5]));
// mj0j
SUPER_ACCOUNTS.push(getMember([22, 19, 0, 19]));
// tong11
SUPER_ACCOUNTS.push(getMember([29, 24, 23, 16, 1, 1]));
// 1td07
SUPER_ACCOUNTS.push(getMember([1, 29, 13, 0, 7]));

// 文子代售
// 购买的会员 w9001(已赠送高级会员)
MEMBERS_ACCOUNTS.push(getMember([32, 9, 0, 0, 1]));
// 购买的会员 w9008(已赠送高级会员)
MEMBERS_ACCOUNTS.push(getMember([32, 9, 0, 0, 8]));
// 购买的会员 zmy640721(已赠送高级会员)
MEMBERS_ACCOUNTS.push(getMember([35, 22, 34, 6, 4, 0, 7, 2, 1]));
// 升级高级会员zmy640721
SUPER_ACCOUNTS.push(getMember([35, 22, 34, 6, 4, 0, 7, 2, 1]));

// 文子代售 2025/10/30
// 购买的会员 wang0314(50标准)
MEMBERS_ACCOUNTS.push(getMember([32, 10, 23, 16, 0, 3, 1, 4]));

// 文子代售 2025/10/30
// 购买的会员 jta191(50标准)
MEMBERS_ACCOUNTS.push(getMember([19, 29, 10, 1, 9, 1]));

// 是否是会员
var IS_MEMBER = false;

// 是否是超级会员
var IS_SUPER_MEMBER = false;

// 是否是管理员
var IS_ADMIN_MEMBER = false;

// 返回是否是会员账号
function isMemberAccount(account){
    for(var i = 0; i < MEMBERS_ACCOUNTS.length; ++i){
        if(account == MEMBERS_ACCOUNTS[i]){
            return true;
        }
    }
    return false;
}

// 返回是否会员名称
function isMemberName(name){
    for(var i = 0; i < MEMBERS_NAMES.length; ++i){
        if(name == MEMBERS_NAMES[i]){
            return true;
        }
    }
    return false;
}

// 返回是否是超级会员账号
function isSuperAccount(account){
    for(var i = 0; i < SUPER_ACCOUNTS.length; ++i){
        if(account == SUPER_ACCOUNTS[i]){
            return true;
        }
    }
    return false;
}

// 返回是否是管理员账号
function isAdminAccount(account){
    for(var i = 0; i < ADMIN_ACCOUNT.length; ++i){
        if(account == ADMIN_ACCOUNT[i]){
            return true;
        }
    }
    return false;
}

// 返回是否超级会员名称
function isSuperName(name){
    for(var i = 0; i < SUPER_NAMES.length; ++i){
        if(name == SUPER_NAMES[i]){
            return true;
        }
    }
    return false;
}

// 关闭会员设置
function disableMemberConfig(){
    setBoolOptionGameVars("isAllowWall", false);
    setBoolOptionGameVars("isAutoRepart", false);
    setBoolOptionGameVars("isAutoSale", false);
    setBoolOptionGameVars("isLimitChat", false);
    setBoolOptionGameVars("isAutoStore", false);
    setBoolOptionGameVars("isLockEnemy", false);
    setBoolOptionGameVars("isMoveCast", false);
    // 还原加速
    setNumberOptionGameVars("moveSpeed", 0);
    // 关闭挂机
    setIsHangUp(false);
    // 还原技能CD
    setNumberOptionGameVars("subSkillCd", 0);
    // 还原读条CD
    setNumberOptionGameVars("subSkillRead", 0);
}

// 关闭超级会员设置
function disableSuperMemberConfig(){
    setBoolOptionGameVars("isLockEnemy", false);
    setBoolOptionGameVars("isMoveCast", false);
    setBoolOptionGameVars("isAutoCollection", false);
    setBoolOptionGameVars("isTogetherCast", false);
    setMultipleOptionGameVars("lockType", 0);
}

function getSymbol(index){
    if(index < SYMBOL_STR.length()){
        return SYMBOL_STR.substring(index, index+1);
    }else{
        return "";
    }
}

function getMember(array){
    var r = "";
    for(var i = 0; i < array.length; ++i){
        r += getSymbol(array[i]);
    }
    return r;
}

// 返回当前角色是否是会员
function checkMember(){
    var account = player.account;
    var name = player.name;
    IS_ADMIN_MEMBER = isAdminAccount(account);
    IS_SUPER_MEMBER = IS_ADMIN_MEMBER || isSuperAccount(account) || isSuperName(name);
    IS_MEMBER = IS_SUPER_MEMBER || isMemberAccount(account) || isMemberName(name);
}