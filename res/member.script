// 会员模块

// 符号列表
var SYMBOL_STR = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

// 管理员账号
var ADMIN_ACCOUNT = [];

// 会员账号
var MEMBERS_ACCOUNTS = [];

// 增加高级会员
ADMIN_ACCOUNT.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 3]));

// 增加会员
MEMBERS_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 3]));
MEMBERS_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 4]));
MEMBERS_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 5]));
MEMBERS_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 6]));
// 购买的会员 946932819
MEMBERS_ACCOUNTS.push(getMember([9, 4, 6, 9, 3, 2, 8, 1, 9]));
// 购买的会员 hcn123456
MEMBERS_ACCOUNTS.push(getMember([17, 12, 23, 1, 2, 3, 4, 5, 6]));
// 购买的会员 s9527
MEMBERS_ACCOUNTS.push(getMember([28, 9, 5, 2, 7]));
// 购买的会员 158661436500
MEMBERS_ACCOUNTS.push(getMember([1, 5, 8, 6, 6, 1, 4, 3, 6, 5, 0, 0]));
// 购买的会员 tyghvb1
MEMBERS_ACCOUNTS.push(getMember([29, 34, 16, 17, 31, 11, 1]));
// 购买的会员 qq1111
MEMBERS_ACCOUNTS.push(getMember([26, 26, 1, 1, 1, 1]));
// 购买的会员 sa
MEMBERS_ACCOUNTS.push(getMember([28, 10]));
// 购买的会员 778914380
MEMBERS_ACCOUNTS.push(getMember([7, 7, 8, 9, 1, 4, 3, 8, 0]));
// 购买的会员 13407734428
MEMBERS_ACCOUNTS.push(getMember([1, 3, 4, 0, 7, 7, 3, 4, 4, 2, 8]));
// 购买的会员 w909
MEMBERS_ACCOUNTS.push(getMember([32, 9, 0, 9]));
// 购买的会员 158661436501
MEMBERS_ACCOUNTS.push(getMember([1, 5, 8, 6, 6, 1, 4, 3, 6, 5, 0, 1]));
// 购买的会员 mjtm
MEMBERS_ACCOUNTS.push(getMember([22, 19, 29, 22]));

// 高级会员账号
var SUPER_ACCOUNTS = [];
// 增加高级会员
SUPER_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 3]));
SUPER_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 4]));
SUPER_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 5]));
SUPER_ACCOUNTS.push(getMember([9, 5, 7, 3, 9, 8, 1, 2, 6]));


// 会员名称
var MEMBERS_NAMES = ["大鱼", "福满", "米雪", "太公6", "血色战甲", "医打怪兽", "殷饵", "VIP大天二", "凤飞飞", "清澈"];

// 高级会员名称
var SUPER_NAMES= [""];

// 是否是会员
var IS_MEMBER = false;

// 是否是超级会员
var IS_SUPER_MEMBER = false;

// 返回是否是会员账号
function isMemberAccount(account){
    for(var i = 0; i < MEMBERS_ACCOUNTS.length; ++i){
        if(account == MEMBERS_ACCOUNTS[i]){
            return true;
        }
    }
    return false;
}

// 返回是否会员名称
function isMemberName(name){
    for(var i = 0; i < MEMBERS_NAMES.length; ++i){
        if(name == MEMBERS_NAMES[i]){
            return true;
        }
    }
    return false;
}

// 返回是否是超级会员账号
function isSuperAccount(account){
    for(var i = 0; i < SUPER_ACCOUNTS.length; ++i){
        if(account == SUPER_ACCOUNTS[i]){
            return true;
        }
    }
    return false;
}

// 返回是否超级会员名称
function isSuperName(name){
    for(var i = 0; i < SUPER_NAMES.length; ++i){
        if(name == SUPER_NAMES[i]){
            return true;
        }
    }
    return false;
}

// 初始化会员设置
function enableMemberConfig(){
    setBoolOptionGameVars("isAllowWall", false);
    setBoolOptionGameVars("isAutoRepart", true);
    setBoolOptionGameVars("isAutoSale", false);
    setBoolOptionGameVars("isLimitChat", true);
    setBoolOptionGameVars("isAutoStore", true);
    setBoolOptionGameVars("isLockEnemy", false);
    setBoolOptionGameVars("isMoveCast", false);
}

// 初始化超级会员设置
function enableSuperMemberConfig(){
    enableMemberConfig();
    setBoolOptionGameVars("isLockEnemy", true);
    setBoolOptionGameVars("isMoveCast", true);
}

// 关闭会员设置
function disableMemberConfig(){
    setBoolOptionGameVars("isAllowWall", false);
    setBoolOptionGameVars("isAutoRepart", false);
    setBoolOptionGameVars("isAutoSale", false);
    setBoolOptionGameVars("isLimitChat", false);
    setBoolOptionGameVars("isAutoStore", false);
    setBoolOptionGameVars("isLockEnemy", false);
    setBoolOptionGameVars("isMoveCast", false);
    // 还原加速
    setNumberOptionGameVars("moveSpeed", 0);
    // 关闭挂机
    setIsHangUp(false);
}

function getSymbol(index){
    if(index < SYMBOL_STR.length()){
        return SYMBOL_STR.substring(index, index+1);
    }else{
        return "";
    }
}

function getMember(array){
    var r = "";
    for(var i = 0; i < array.length; ++i){
        r += getSymbol(array[i]);
    }
    return r;
}