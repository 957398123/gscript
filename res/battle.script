// 天劫战斗模块

// 战斗状态 0-恢复状态中 1-寻径中
var battle_status = 0;

// 挂机坐标col
var battle_pCol = 0;

// 挂机坐标row
var battle_pRow = 0;

// 是否已经释放猛毒蛊
var hook_hasCastMdg = false;

// 猛毒蛊时间计数(单位秒)
var hook_MdgCount = 0;

// 是否已经释放天破龙卷
var hook_hasCastTplj = false;

// 天破龙卷时间计数(单位秒)
var hook_TpljCount = 0;

// 是否已经释放黄帝内径
var hook_hasCastHdnj = false;

// 黄帝内径时间计数(单位秒)
var hook_HdnjCount = 0;

// 挂机类型
function battle(){
    if(player.profession == 1){  //  剑客
        battleSwordMan();
    }else if(player.profession == 2){  // 道士
        battleTaoist();
    }else if(player.profession == 3){  // 医生
        battleApothecary();
    }else if(player.profession == 4){  // 刺客
        battleAssassin();
    }
}

//-------------------------------------------  剑客战斗模块  -------------------------------------------------
function battleSwordMan(){
}

//-------------------------------------------  道士战斗模块  -------------------------------------------------
function battleTaoist(){
}

//-------------------------------------------  医生战斗模块  -------------------------------------------------
function battleApothecary(){
    // 获取玩家当前目标
    var hpPer = getPercentageHp();
    var mpPer = getPercentageMp();
    // 如果玩家没有死亡
    if(player.state != 5){
        if(battle_status == 0){  // 恢复中
            hook_hasCastMdg = false;
            hook_hasCastTplj = false;
            if(player.isBeAttack || (isHangUpColRow() && ((hpPer > 70 && mpPer > 70)))){
                var fightObj = gameEnv.getNearFightObj();
                if(fightObj != null){
                    // 设置当前对象
                    gameEnv.setCurrentTarget(fightObj);
                    // 设置选择寻径目标
                    player.setAimColRow(fightObj.col, fightObj.row);
                    // 更新状态
                    battle_status = 1;
                }
            }else if(!isHangUpColRow()){ // 如果不在挂机位置
                // 如果当前挂机点不是寻径目标，回到挂机点
                if(!player.isAimColRow(battle_pCol, battle_pRow)){
                    player.setAimColRow(battle_pCol, battle_pRow);
                }
            }else if(hpPer < 90 && player.canCastSkill(2)){
                gameEnv.setCurrentTarget(player);
                player.caskSkill(player, 2);
            }
        }else if(battle_status == 1){  // 寻径中
            var target = player.target;
            // 目标存在，并且不是玩家
            if(target != null && target != player){
                if(gameEnv.inDistance(player, target, 60)){
                    // 进入战斗
                    player.resetFindPath();
                    battle_status = 2;
                }else {
                    // 实时更新寻径位置
                    player.setAimColRow(target.col, target.row);
                }
            }else {
                // 如果丢失目标，回到挂机点
                battle_status = 0;
            }
        }else if(battle_status == 2){  // 进入战斗
            var target = player.target;
            if(target != null && target != player){
                // 如果怪物血量大于0
                if(target.curHp > 0){
                    // 进入施法范围
                    if(gameEnv.inDistance(player, target, 80)){
                        // 判断是否可以释放技能，这里注意吟唱技能时没有内置CD的
                        if (hpPer < 40 && player.canCastSkill(2)) {
                            // 这里必须设置为当前选中对象
                            player.caskSkill(target, 2);
                        }else if (!hook_hasCastMdg && player.canCastSkill(7)) {  // 释放猛毒蛊
                            hook_hasCastMdg = true;
                            hook_MdgCount = 15;
                            player.caskSkill(target, 7);
                            printMessage("[王辅]：释放猛毒蛊！");
                        }else if (!hook_hasCastTplj && player.canCastSkill(9)) {  // 释放天破龙卷
                            hook_hasCastTplj = true;
                            hook_TpljCount = 2;
                            player.caskSkill(target, 9);
                        }else if (player.canCastSkill(1)) {  // 释放飓风之牙
                            player.caskSkill(target, 1);
                        } else { // 判断是否可以普通攻击
                            // 判断当前是否能攻击到
                            if (player.canNormalAttack(target)) {
                                if (player.normalAttackCount > 30) {  // 如果普通攻击CD好了
                                    // 瞬移进行普通攻击
                                    player.setObjPosition(target.col, target.row);
                                    player.normalAttck();
                                }
                            }
                        }
                    }else {
                        battle_status = 1;
                    }
                }else{
                    player.stopBattle();
                    battle_status = 0;
                }
            }else {
                // 没有怪物，回到原点
                battle_status = 0;
            }
        }
    }else {
        // hook状态置位0
        hook_status = 0;
        battle_status = 0;
        gameEnv.keyPressed(NUM_11);
    }
}

//-------------------------------------------  刺客战斗模块  -------------------------------------------------
function battleAssassin(){
}

// 获取玩家血量百分比
function getPercentageHp(){
    var r = 0;
    if(player.maxHp != 0){
        r = (player.curHp / player.maxHp) * 100;
    }
    return r;
}

// 获取玩家蓝量百分比
function getPercentageMp(){
    var r = 0;
    if(player.maxMp != 0){
        r = (player.curMp / player.maxMp) * 100;
    }
    return r;
}

// 是否是挂机点
function isHangUpColRow(){
    return battle_pCol == player.col && battle_pRow == player.row;
}

// 重置战斗模块
function restBattle(){
    battle_status = 0;
    battle_pCol = 0;
    battle_pRow = 0;
    hook_hasCastMdg = false;
    hook_MdgCount = 0;
    hook_hasCastTplj = false;
    hook_TpljCount = 0;
    hook_hasCastHdnj = false;
    hook_HdnjCount = 0;
    player.stopBattle();
}