// 天劫hook模块

// 帧函数回调列表
var PLAYER_FRAME_CALL = [];

// 分钟计数
var PLAYER_MINUTE_COUNT = 0;

// 分钟回调列表
var PLAYER_MINUTE_CALL = [];

// 秒计数器
var PLAYER_SECOND_COUNT = 0;

// 秒回调列表
var PLAYER_SECOND_CALL = [];

// 临时会员体验时间(单位分钟)
var TEMP_MEMBER = 5;

// 游戏初始化时调用(只会调用一次)
function start(){
    // 更新版本号
    gameEnv.setVersion(100728832);
    // 这里是全局游戏
    regHandleCall(GAME_SECOND_CALL, tickRoleView);
    // 以下是游戏中玩家的处理
    // 注册时间播报
    regHandleCall(PLAYER_MINUTE_CALL, printRunTime);
    // 注册公告
    regHandleCall(PLAYER_MINUTE_CALL, printAD);
    // 注册临时会员检测
    regHandleCall(PLAYER_MINUTE_CALL, checkTempMember);
    // 注册修理装备
    regHandleCall(PLAYER_MINUTE_CALL, checkEquip);
    // 帧处理
    regHandleCall(PLAYER_FRAME_CALL, repairEquip);
    // 注册仓库存钱
    regHandleCall(PLAYER_MINUTE_CALL, checkStore);
    // 注册挂机模块
    regHandleCall(PLAYER_FRAME_CALL, hangUpFrame);
    // 秒处理
    regHandleCall(PLAYER_SECOND_CALL, hangUpSecond);
    // 初始化王辅模块
    initHangModule();
}

// 进入游戏界面时调用
function entryGame(){
    // 输出hello
    printMessage("[王辅]：欢迎使用王牌辅助" + GAME_VARS.version + "！");
    IS_SUPER_MEMBER = isSuperAccount(player.account) || isSuperName(player.name);
    IS_MEMBER = IS_SUPER_MEMBER || isMemberAccount(player.account) || isMemberName(player.name);
    if(IS_SUPER_MEMBER){
        enableMemberConfig();
        printMessage("[王辅]：欢迎您，尊贵的超级会员！");
    }else if(IS_MEMBER){
        enableMemberConfig();
        printMessage("[王辅]：欢迎您，尊贵的会员！");
    }else if(TEMP_MEMBER > 0){
        enableMemberConfig();
        printMessage("[王辅]：您不是王辅会员，会员体验还剩余" + TEMP_MEMBER + "分钟！");
    }else{
        printMessage("[王辅]：您不是王辅会员，体验功能结束，请注册会员！");
    }
    // 读取配置文件，覆盖默认设置
    readGameVarRecord();
    // 判断是不是会员
    if(IS_MEMBER){
        // 关闭定点挂机
        if(GAME_VARS.isHangUp && GAME_VARS.isPatrol){
            setIsHangUp(false);
        }
    }else{
        setIsHangUp(false);
    }
    // 判断是不是超级会员
    if(!IS_SUPER_MEMBER){
        disableSuperMemberConfig();
    }
}

// 玩家tick之前
function beforePlayerTick(){
    // 定时模块
    updatePlayerCount();
}

// 更新运行时间
function updatePlayerCount(){
    // 获取运行了多少秒
    var currTime = gameEnv.getRuntime();
    var count = currTime / 60;
    // 回调帧的注册函数
    invokeMethods(PLAYER_FRAME_CALL);
    // 回调秒计时器
    if(currTime > PLAYER_SECOND_COUNT){
        PLAYER_SECOND_COUNT = currTime;
        // 回调注册的函数
        invokeMethods(PLAYER_SECOND_CALL);
    }
    // 回调分钟计时器
    if(count > PLAYER_MINUTE_COUNT){
        PLAYER_MINUTE_COUNT = count;
        // 回调注册的函数
        invokeMethods(PLAYER_MINUTE_CALL);
    }
}

// 调用数组函数
function invokeMethods(methods){
    for(var i = 0; i < methods.length; ++i){
        methods[i]();
    }
}

// 注册回调函数
function regHandleCall(handle, call){
    handle[handle.length] = call;
}

//-------------------------------------------  选取角色  -------------------------------------------------

// 秒计数器
var GAME_SECOND_COUNT = 0;

// 秒回调列表
var GAME_SECOND_CALL = [];

function startTick(){
    // 获取运行了多少秒
    var currTime = gameEnv.getRuntime();
    var count = currTime / 60;
    // 回调秒计时器
    if(currTime > GAME_SECOND_COUNT){
        GAME_SECOND_COUNT = currTime;
        // 回调注册的函数
        invokeMethods(GAME_SECOND_CALL);
    }
}

// 角色选择界面的tick
function tickRoleView(){
    // 如果巡逻挂机
    if(gameEnv.status == 12 && GAME_VARS.isHangUp && !GAME_VARS.isPatrol){
        // 更新登录计数
        if(hook_login_time > 0){
            --hook_login_time;
        }else{
            hook_login_time = -1;
            // 开始登录角色
            gameEnv.loginRole(hook_login_name);
        }
    }else if(gameEnv.status == 17 && GAME_VARS.isHangUp && !GAME_VARS.isPatrol){  // 如果是公告界面，并且巡逻挂机，跳过公告
        gameEnv.keyPressed(SOFT_OK);
    }
}