// 天劫hook模块

// 帧函数回调列表
var FRAME_CALL = [];

// 分钟计数
var MINUTE_COUNT = 0;

// 分钟回调列表
var MINUTE_CALL = [];

// 秒计数器
var SECOND_COUNT = 0;

// 秒回调列表
var SECOND_CALL = [];

// 临时会员体验时间(单位分钟)
var TEMP_MEMBER = 5;

// 游戏初始化时调用(只会调用一次)
function start(){
    // 更新版本号
    gameEnv.setVersion(100728832);
    // 注册时间播报
    regMinuteCall(printRunTime);
    // 注册公告
    regMinuteCall(printAD);
    // 注册临时会员检测
    regMinuteCall(checkTempMember);
    // 注册仓库存钱
    regMinuteCall(checkStore);
    // 注册修理装备
    regMinuteCall(checkEquip);
    regFrameCall(repairEquip);
    // 注册挂机模块
    regFrameCall(hangUpFrame);
    regSecondCall(hangUpSecond);

    // 初始化王辅模块
    initHangModule();
}

// 进入游戏界面时调用
function entryGame(){
    // 输出hello
    printMessage("[王辅]：欢迎使用王牌辅助" + GAME_VARS.version + "！");
    IS_SUPER_MEMBER = isSuperAccount(player.account) || isSuperName(player.name);
    IS_MEMBER = IS_SUPER_MEMBER || isMemberAccount(player.account) || isMemberName(player.name);
    if(IS_SUPER_MEMBER){
        enableSuperMemberConfig();
        printMessage("[王辅]：欢迎您，尊贵的超级会员！");
    }else if(IS_MEMBER){
        enableMemberConfig();
        printMessage("[王辅]：欢迎您，尊贵的会员！");
    }else if(TEMP_MEMBER > 0){
        enableMemberConfig();
        printMessage("[王辅]：您不是王辅会员，会员体验还剩余" + TEMP_MEMBER + "分钟！");
    }else{
        printMessage("[王辅]：您不是王辅会员，体验功能结束，请注册会员！");
    }
    // 结束挂机
    setIsHangUp(false);
}

// 玩家tick之前
function beforePlayerTick(){
    // 定时模块
    updateCount();
}

// tick回调结束时回调
function endTick(){
    if(gameEnv.curState == 17){
        gameEnv.keyPressed(SOFT_OK);
    }
}

// 更新运行时间
function updateCount(){
    // 获取运行了多少秒
    var currTime = gameEnv.getRuntime();
    var count = currTime / 60;
    // 回调帧的注册函数
    invokeMethods(FRAME_CALL);
    // 回调秒计时器
    if(currTime > SECOND_COUNT){
        SECOND_COUNT = currTime;
        // 回调注册的函数
        invokeMethods(SECOND_CALL);
    }
    // 回调分钟计时器
    if(count > MINUTE_COUNT){
        MINUTE_COUNT = count;
        // 回调注册的函数
        invokeMethods(MINUTE_CALL);
    }
}

// 调用数组函数
function invokeMethods(methods){
    for(var i = 0; i < methods.length; ++i){
        methods[i]();
    }
}

// 注册分钟运行函数
function regMinuteCall(call){
    MINUTE_CALL[MINUTE_CALL.length] = call;
}

// 注册秒运行函数
function regSecondCall(call){
    SECOND_CALL[SECOND_CALL.length] = call;
}

// 注册帧运行函数
function regFrameCall(call){
    FRAME_CALL[FRAME_CALL.length] = call;
}