// 游戏控制变量

// 命名空间
var GAME_VARS = {};

// 游戏变量最大值
var GAME_VARS_MAXNUM = {
    "hpStatusPer": 100,      // 血量最大值
    "mpStatusPer": 100,      // 蓝量最大值
    "attackScope": 99,       // 攻击范围最大值
    "repartInterval": 60,    // 自动修装间隔最大值
    "saleInterval": 60,      // 自动售卖间隔最大值
    "moveSpeed": 9,          // 移动速度最大值
    "autoStoreInterval": 60, // 自动存钱最大值
    "battleScope": 120       // 施法最大范围
};

GAME_VARS.configName = "GAME_VARS";

// 王辅版本
GAME_VARS.version = "V4.1";

// 游戏公告
GAME_VARS.gameNotice = "王辅版本" + GAME_VARS.version + "，新增巡逻挂机功能！";

// 是否挂机
GAME_VARS.isHangUp = false;

// 是否定点挂机
GAME_VARS.isPatrol = true;

// 血量恢复挂机百分比
GAME_VARS.hpStatusPer = 70;

// 蓝量恢复挂机百分比
GAME_VARS.mpStatusPer = 70;

// 挂机攻击范围  默认12
GAME_VARS.attackScope = 12;

// 是否使用自定义挂机
GAME_VARS.isCustomizeHangUp = false;

// 是否吃红药
GAME_VARS.isUseRedPotion = false;

// 是否吃蓝药
GAME_VARS.isUseBluePotion = false;

// 是否吃紫药
GAME_VARS.isUsePurplePotion = false;

// 挂机施法范围 默认60码
GAME_VARS.battleScope = 60;

// 是否允许穿墙
GAME_VARS.isAllowWall = false;

// 是否自动修理
GAME_VARS.isAutoRepart = false;

// 修理间隔时间
GAME_VARS.repartInterval = 5;

// 是否自动售卖
GAME_VARS.isAutoSale = false;

// 售卖间隔时间
GAME_VARS.saleInterval = 5;

// 移动速度
GAME_VARS.moveSpeed = 1;

// 解除聊天限制
GAME_VARS.isLimitChat = false;

// 是否自动存钱
GAME_VARS.isAutoStore = false;

// 自动存钱间隔
GAME_VARS.autoStoreInterval = 5;

// 背包保留金钱
GAME_VARS.RETAIN_MONEY = 1000;

// 是否远距锁敌
GAME_VARS.isLockEnemy = false;

// 是否移动施法
GAME_VARS.isMoveCast = false;

// 星号键类型 0-快速聊天 1-锁定怪物 2-锁定敌对玩家 3-锁定怪物+敌对玩家 4-仅友方
GAME_VARS.lockType = 0;

// 设置单选按钮变量
function setBoolOptionGameVars(name, value){
    var keyMap = guiZone.hangUI.keyMap;
    var rb = keyMap[name];
    if(rb != null){
        GAME_VARS[name] = value;
        if(value){
            rb.setChooseItem(0);
        }else{
            rb.setChooseItem(1);
        }
    }
}

// 设置数值变量
function setNumberOptionGameVars(name, value){
    var keyMap = guiZone.hangUI.keyMap;
    var rb = keyMap[name];
    if(rb != null){
        GAME_VARS[name] = value;
        rb.setNumber(value);
        var maxNum = GAME_VARS_MAXNUM[name];
        if(maxNum != null){
            rb.setFreePoint(maxNum - value);
        }
    }
}

// 从配置中读取设置
function readGameVarRecord(){
    var name = player.name + "_GAME_VARS";
    var records = gameEnv.readRecord(name, 22);
    if(records != null){
        setBoolOptionGameVars("isPatrol", records[0].getBoolean());
        setBoolOptionGameVars("isAllowWall", records[1].getBoolean());
        setBoolOptionGameVars("isAutoRepart", records[2].getBoolean());
        setNumberOptionGameVars("repartInterval", records[3].getIntValue());
        setBoolOptionGameVars("isAutoSale", records[4].getBoolean());
        setNumberOptionGameVars("saleInterval", records[5].getIntValue());
        setNumberOptionGameVars("moveSpeed", records[6].getIntValue());
        setBoolOptionGameVars("isLimitChat", records[7].getBoolean());
        setBoolOptionGameVars("isAutoStore", records[8].getBoolean());
        setNumberOptionGameVars("autoStoreInterval", records[9].getIntValue());
        // setNumberOptionGameVars("RETAIN_MONEY", records[10].getIntValue());
        // 高级会员设置
        IS_SUPER_MEMBER = isSuperAccount(player.account) || isSuperName(player.name);
        if(IS_SUPER_MEMBER){
            setBoolOptionGameVars("isLockEnemy", records[11].getBoolean());
            setBoolOptionGameVars("isMoveCast", records[12].getBoolean());
            // setNumberOptionGameVars("lockType", records[13].getIntValue());
        }
        setNumberOptionGameVars("attackScope", records[14].getIntValue());
        setNumberOptionGameVars("hpStatusPer", records[15].getIntValue());
        setNumberOptionGameVars("mpStatusPer", records[16].getIntValue());
        setBoolOptionGameVars("isCustomizeHangUp", records[17].getBoolean());
        setBoolOptionGameVars("isUseRedPotion", records[18].getBoolean());
        setBoolOptionGameVars("isUseBluePotion", records[19].getBoolean());
        setBoolOptionGameVars("isUsePurplePotion", records[20].getBoolean());
        setNumberOptionGameVars("battleScope", records[21].getIntValue());
    }else{
        // 保存默认值
        storeGameVarRecord();
    }
}

// 存储变量值
function storeGameVarRecord(){
    var name = player.name + "_GAME_VARS";
    var records = [
        GAME_VARS.isPatrol,           // 是否定点挂机
        GAME_VARS.isAllowWall,        // 是否穿墙
        GAME_VARS.isAutoRepart,       // 是否自动修理
        GAME_VARS.repartInterval,     // 修理间隔时间
        GAME_VARS.isAutoSale,         // 是否自动售卖
        GAME_VARS.saleInterval,       // 售卖间隔时间
        GAME_VARS.moveSpeed,          // 移动速度
        GAME_VARS.isLimitChat,        // 是否解除聊天限制
        GAME_VARS.isAutoStore,        // 是否自动存钱
        GAME_VARS.autoStoreInterval,  // 自动存钱间隔
        GAME_VARS.RETAIN_MONEY,       // 背包保留金钱
        GAME_VARS.isLockEnemy,        // 是否远距索敌
        GAME_VARS.isMoveCast,         // 是否移动施法
        GAME_VARS.lockType,           // 星号快捷类型
        GAME_VARS.attackScope,        // 攻击范围
        GAME_VARS.hpStatusPer,        // 挂机等待恢复血量百分比
        GAME_VARS.mpStatusPer,        // 挂机等待恢复蓝量百分比
        GAME_VARS.isCustomizeHangUp,  // 是否使用内置挂机
        GAME_VARS.isUseRedPotion,     // 是否吃红药
        GAME_VARS.isUseBluePotion,    // 是否吃蓝药
        GAME_VARS.isUsePurplePotion,  // 是否吃紫药
        GAME_VARS.battleScope         // 施法距离
    ];
    gameEnv.saveRecord(name, records);
}